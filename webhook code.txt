// import { cartTable, db } from "@/lib/drizzle";
// import { eq } from "drizzle-orm";
// import { headers } from "next/headers";
// import Stripe from "stripe";

// const endPointSecret = process.env.STRIPE_WEBHOOK_SECRET as string;

// export const POST = async (req: any, res: any) => {
//   const headerList = headers();

//   try {
//     const rawBody = await req.text();
//     const sig = headerList.get("stripe-signature");

//     const stripe = new Stripe(process.env.STRIPE_SECRET_KEY as string, {
//       apiVersion: "2023-08-16",
//     });

//     let event;

//     try {
//       if (!sig || !endPointSecret) {
//         return (
//           new Response("Webhook endpoint secret is not available"),
//           { status: 400 }
//         );
//       }

//       event = stripe.webhooks.constructEvent(
//         rawBody.toString(),
//         sig,
//         endPointSecret
//       );
//     } catch (error: any) {
//       console.log("something wrong with signature");
//       return (
//         new Response("Webhook endpoint secret is not available"),
//         {status: 400}
//       );
//     }

//     if (`checkout.session.completed` === event.type) {
//       const session = event.data.object;

//       //@ts-ignore
//       const cumtomerData = await stripe.customers.retrieve(session.customers);

//       //@ts-ignore
//       const userId = cumtomerData.metadata.userId;

//       await db.delete(cartTable).where(eq(cartTable.user_id, userId));

//       console.log("payment completed ---", session);

//       const line_items = await stripe.checkout.sessions.listLineItems(
//           //@ts-ignore
//         event.data.object!.user_id
//       );

//       return new Response("payment confirmed router reciept");
//     } else {
//       res.setHeader("Allow", "POST");
//     }
//   } catch (error) {
//     console.log("Error in webhook", error);
//     return;
//   }
// };
